{"version":3,"sources":["views/Selection/index.tsx","layout/Beta/index.tsx","layout/Rectangle/index.tsx"],"names":["Selection","useEffect","setTimeout","selection","document","getSelection","p","querySelector","from","to","from1","to1","cloned","astext","area","area1","button","button1","button2","input","input1","input2","setBaseAndExtent","childNodes","length","onselectionchange","anchorNode","anchorOffset","focusNode","focusOffset","value","data","innerHTML","i","rangeCount","append","getRangeAt","cloneContents","onselect","selectionStart","selectionEnd","onfocus","onclick","selected","slice","setRangeText","pos","indexOf","focus","title","content","className","style","padding","display","left","language","docco","right","id","marginLeft","disabled","marginTop","defaultValue","width","Beta","props","Rectangle"],"mappings":"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","file":"static/js/10.beba0a96.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {docco} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Beta from \"../../layout/Beta\";\nimport Rectangle from \"../../layout/Rectangle\";\n\nconst str1 = `\n<p id=\"p\">Select me: <i>italic</i> and <b>bold</b></p>\n\n<script>\n// 从 <p> 的第 0 个子节点中选择到最后一个子节点\ndocument.getSelection().setBaseAndExtent(p, 0, p, p.childNodes.length);\n</script>`;\n\nconst str2 = `\n<p id=\"p\">Select me: <i>italic</i> and <b>bold</b></p>\n\nFrom <input id=\"from\" disabled> – To <input id=\"to\" disabled>\n<script>\n  document.onselectionchange = function() {\n    let {anchorNode, anchorOffset, focusNode, focusOffset} = document.getSelection();\n\n    from.value = \\`\\${anchorNode && anchorNode.data}:\\${anchorOffset}\\`;\n    to.value = \\`\\${focusNode && focusNode.data}:\\${focusOffset}\\`;\n  };\n</script>\n`;\n\nconst str3 = `\n<p id=\"p\">Select me: <i>italic</i> and <b>bold</b></p>\n\nCloned: <span id=\"cloned\"></span>\n<br>\nAs text: <span id=\"astext\"></span>\n\n<script>\n  document.onselectionchange = function() {\n    let selection = document.getSelection();\n\n    cloned.innerHTML = astext.innerHTML = \"\";\n\n    // 从范围复制 DOM 节点（这里我们支持多选）\n    for (let i = 0; i < selection.rangeCount; i++) {\n      cloned.append(selection.getRangeAt(i).cloneContents());\n    }\n\n    // 以文本形式获取\n    astext.innerHTML += selection;\n  };\n</script>\n`;\n\nconst str4 = `\n<textarea id=\"area\" style=\"width:80%;height:60px\">\nSelecting in this text updates values below.\n</textarea>\n<br>\nFrom <input id=\"from\" disabled> – To <input id=\"to\" disabled>\n\n<script>\n  area.onselect = function() {\n    from.value = area.selectionStart;\n    to.value = area.selectionEnd;\n  };\n</script>\n`;\n\nconst str5 = `\n<textarea id=\"area\" style=\"width:80%;height:60px\">\nFocus on me, the cursor will be at position 10.\n</textarea>\n\n<script>\n  area.onfocus = () => {\n    // 将 setTimeout 设为零延迟，以便在浏览器“焦点”操作完成后运行\n    setTimeout(() => {\n      // 我们可以设置任何选区\n      // 如果 start=end，则将光标精确定位在该位置\n      area.selectionStart = area.selectionEnd = 10;\n    });\n  };\n</script>\n`;\n\nconst str6 =`\n<input id=\"input\" style=\"width:200px\" value=\"Select here and click the button\">\n<button id=\"button\">Wrap selection in stars *...*</button>\n\n<script>\nbutton.onclick = () => {\n  if (input.selectionStart === input.selectionEnd) {\n    return; // 什么都没选\n  }\n\n  let selected = input.value.slice(input.selectionStart, input.selectionEnd);\n  input.setRangeText(\\`*\\${selected}*\\`);\n};\n</script>`;\n\nconst str7 =`\n<input id=\"input\" style=\"width:200px\" value=\"Replace THIS in text\">\n<button id=\"button\">Replace THIS</button>\n\n<script>\nbutton.onclick = () => {\n  let pos = input.value.indexOf(\"THIS\");\n  if (pos >= 0) {\n    input.setRangeText(\"*THIS*\", pos, pos + 4, \"select\");\n    input.focus(); // 选中它，使选区可见\n  }\n};\n</script>`;\n\nconst str8 = `\n<input id=\"input\" style=\"width:200px\" value=\"Text Text Text Text Text\">\n<button id=\"button\">Insert \"HELLO\" at cursor</button>\n\n<script>\n  button.onclick = () => {\n    input.setRangeText(\"HELLO\", input.selectionStart, input.selectionEnd, \"end\");\n    input.focus();\n  };\n</script>\n`;\n\nconst Selection: React.FC = () => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            const selection: any = document.getSelection();\n            const p: any = document.querySelector('#p');\n            const from: any = document.querySelector('#from');\n            const to: any = document.querySelector('#to');\n            const from1: any = document.querySelector('#from1');\n            const to1: any = document.querySelector('#to1');\n            const cloned: any = document.querySelector('#cloned');\n            const astext: any = document.querySelector('#astext');\n            const area: any = document.querySelector('#area');\n            const area1: any = document.querySelector('#area1');\n            const button: any = document.querySelector('#button');\n            const button1: any = document.querySelector('#button1');\n            const button2: any = document.querySelector('#button2');\n            const input: any = document.querySelector('#input');\n            const input1: any = document.querySelector('#input1');\n            const input2: any = document.querySelector('#input2');\n            selection.setBaseAndExtent(p, 0, p, p.childNodes.length);\n\n            document.onselectionchange = function() {\n                let selection:any = document.getSelection();\n                // @ts-ignore\n                let {anchorNode, anchorOffset, focusNode, focusOffset} = selection;\n                from.value = `${anchorNode && anchorNode.data}:${anchorOffset}`;\n                to.value = `${focusNode && focusNode.data}:${focusOffset}`;\n\n                cloned.innerHTML = astext.innerHTML = \"\";\n\n                // 从范围复制 DOM 节点（这里我们支持多选）\n                for (let i = 0; i < selection.rangeCount; i++) {\n                    cloned.append(selection.getRangeAt(i).cloneContents());\n                }\n\n                // 以文本形式获取\n                astext.innerHTML += selection;\n            };\n            area.onselect = function() {\n                from1.value = area.selectionStart;\n                to1.value = area.selectionEnd;\n            };\n\n            area1.onfocus = () => {\n                // 将 setTimeout 设为零延迟，以便在浏览器“焦点”操作完成后运行\n                setTimeout(() => {\n                    // 我们可以设置任何选区\n                    // 如果 start=end，则将光标精确定位在该位置\n                    area1.selectionStart = area1.selectionEnd = 10;\n                });\n            };\n\n            button.onclick = () => {\n                if (input.selectionStart === input.selectionEnd) {\n                    return; // 什么都没选\n                }\n                let selected = input.value.slice(input.selectionStart, input.selectionEnd);\n                input.setRangeText(`*${selected}*`);\n            };\n            button1.onclick = () => {\n                let pos = input1.value.indexOf(\"THIS\");\n                if (pos >= 0) {\n                    input1.setRangeText(\"*THIS*\", pos, pos + 4, \"select\");\n                    input1.focus(); // 选中它，使选区可见\n                }\n            };\n\n            button2.onclick = () => {\n                input2.setRangeText(\"VALUE\", input2.selectionStart, input2.selectionEnd, \"end\");\n                input2.focus();\n            };\n        }, 200);\n    });\n\n    const caseLeft1 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str1\n                }\n            </SyntaxHighlighter>\n        )\n    };\n    const caseRight1 = () => {\n        return (\n            <>\n                <h3>选区选择示例</h3>\n                <p id=\"p\">Select me: <i>italic</i> and <b>bold</b></p>\n            </>\n        )\n    };\n    const caseLeft2 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str2\n                }\n            </SyntaxHighlighter>\n        )\n    };\n    const caseRight2 = () => {\n        return (\n            <>\n                <h3>选区跟踪示例</h3>\n                <p id=\"p1\">Select me: <i>italic</i> and <b>bold</b></p>\n                <div>\n                    From <input style={{marginLeft: '10px'}} className=\"ui-input\" id=\"from\" disabled/> – To\n                    <input style={{marginLeft: '10px'}} className=\"ui-input\" id=\"to\" disabled/>\n                </div>\n            </>\n        )\n    };\n\n    const caseLeft3 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str3\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight3 = () => {\n        return (\n            <>\n                <h3>选区获取示例</h3>\n                <p id=\"p2\">Select me: <i>italic</i> and <b>bold</b></p>\n                <div>Cloned: <span id=\"cloned\" /></div>\n                <div>As text: <span id=\"astext\" /></div>\n            </>\n        )\n    };\n\n    const caseLeft4 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str4\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight4 = () => {\n        return (\n            <>\n                <h3>跟踪选区示例</h3>\n                <textarea style={{marginTop:\"1rem\"}} className=\"ui-textarea\" id=\"area\" defaultValue=\"Selecting in this text updates values below.\"/>\n                <div style={{marginTop:\"1rem\"}}>\n                    From <input style={{marginLeft: '10px'}} className=\"ui-input\" id=\"from1\" disabled/> – To\n                    <input style={{marginLeft: '10px'}} className=\"ui-input\" id=\"to1\" disabled/>\n                </div>\n            </>\n        )\n    };\n\n    const caseLeft5 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str5\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight5 = () => {\n        return (\n            <>\n                <h3>移动光标示例</h3>\n                <textarea style={{marginTop:\"1rem\",width:'80%'}} className=\"ui-textarea\" id=\"area1\" defaultValue=\"Focus on me, the cursor will be at position 10.\" />\n            </>\n        )\n    };\n\n    const caseLeft6 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str6\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight6 = () => {\n        return (\n            <>\n                <h3>修改选区示例</h3>\n                <input style={{ marginTop:\"1rem\",width:\"50%\" }} className=\"ui-input\" id=\"input\" defaultValue=\"Select here and click the button\" />\n                <div style={{ marginTop:\"1rem\" }}>\n                    <button className=\"ui-button ui-button-primary\" id=\"button\">Wrap selection in stars *...*</button>\n                </div>\n            </>\n        )\n    };\n\n    const caseLeft7 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str7\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight7 = () => {\n        return (\n            <>\n                <h3>选区替换示例</h3>\n                <input style={{ marginTop:\"1rem\",width:\"50%\" }} className=\"ui-input\" id=\"input1\" defaultValue=\"Replace THIS in text\" />\n                <div style={{ marginTop:\"1rem\" }}>\n                    <button className=\"ui-button ui-button-primary\" id=\"button1\">Replace THIS</button>\n                </div>\n            </>\n        )\n    };\n\n    const caseLeft8 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str8\n                }\n            </SyntaxHighlighter>\n        )\n    };\n\n    const caseRight8 = () => {\n        return (\n            <>\n                <h3>光标插入</h3>\n                <input style={{ marginTop:\"1rem\",width:\"50%\" }} className=\"ui-input\" id=\"input2\" defaultValue=\"Text Text Text Text Text\" />\n                <div style={{ marginTop:\"1rem\" }}>\n                    <button className=\"ui-button ui-button-primary\" id=\"button2\">Insert \"VALUE\" at cursor</button>\n                </div>\n            </>\n        )\n    };\n\n    const render = () => {\n        return (\n            <>\n                <div className=\"comp-code-alpha\" style={{padding: \"1rem\", display: 'block'}}>\n                    <Rectangle left={caseLeft1()} right={caseRight1()}/>\n                    <Rectangle left={caseLeft2()} right={caseRight2()}/>\n                    <Rectangle left={caseLeft3()} right={caseRight3()}/>\n                    <Rectangle left={caseLeft4()} right={caseRight4()}/>\n                    <Rectangle left={caseLeft5()} right={caseRight5()}/>\n                    <Rectangle left={caseLeft6()} right={caseRight6()}/>\n                    <Rectangle left={caseLeft7()} right={caseRight7()}/>\n                    <Rectangle left={caseLeft8()} right={caseRight8()}/>\n                </div>\n            </>\n        )\n    };\n\n    return (\n        <Beta title=\"Selection 对象示例\" content={render()}/>\n    )\n};\n\nexport default Selection;","import React, {ReactElement} from 'react';\n\ninterface Iprops {\n    title: string;\n    content: ReactElement;\n}\n\nconst Beta: React.FC<Iprops> = props => {\n    const {title, content} = props;\n    return (\n        <div className=\"layout-beta\">\n            <div className=\"layout-hader\">{title}</div>\n            <div className=\"layout-content\">{content}</div>\n        </div>\n    );\n};\n\nexport default Beta;","import React, {ReactElement} from 'react';\n\ninterface Iprops {\n    left: ReactElement,\n    right: ReactElement\n}\n\nconst Rectangle = (props: Iprops) => {\n    const {left,right} = props;\n    return (\n        <div className=\"layout-rectangle\">\n            <div className=\"left\">{left}</div>\n            <div className=\"right\">{right}</div>\n        </div>\n    )\n};\n\nexport default Rectangle;\n"],"sourceRoot":""}