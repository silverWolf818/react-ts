{"version":3,"sources":["views/Range/index.tsx","layout/Beta/index.tsx","layout/Rectangle/index.tsx"],"names":["result","range","Range","Selection","useEffect","setTimeout","methods","resetExample","deleteContents","extractContents","content","innerHTML","append","cloneContents","insertNode","newNode","document","createElement","surroundContents","e","alert","selection","window","getSelection","p","querySelector","setStart","setEnd","removeAllRanges","addRange","onCase1","p1","start","end","value","title","className","style","padding","display","left","language","docco","right","id","marginLeft","type","onClick","margin","Beta","props","Rectangle"],"mappings":"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","file":"static/js/9.85c649fc.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {docco} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Beta from \"../../layout/Beta\";\nimport Rectangle from \"../../layout/Rectangle\";\n\nconst str1 = `\n<p id=\"p\">Example: <i>italic</i> and <b>bold</b></p>\nFrom <input id=\"start\" type=\"number\" value=1> – To <input id=\"end\" type=\"number\" value=4>\n<button id=\"button\">Click to select</button>\n<script>\n  button.onclick = () => {\n    let range = new Range();\n\n    range.setStart(p, start.value);\n    range.setEnd(p, end.value);\n\n    // 应用选区，后文有解释\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(range);\n  };\n</script>`;\n\nconst str2 = `\n<p id=\"p\">Example: <i>italic</i> and <b>bold</b></p>\n\n<p id=\"result\"></p>\n<script>\n  let range = new Range();\n\n  // 下面演示上述的各个方法：\n  let methods = {\n    deleteContents() {\n      range.deleteContents()\n    },\n    extractContents() {\n      let content = range.extractContents();\n      result.innerHTML = \"\";\n      result.append(\"extracted: \", content);\n    },\n    cloneContents() {\n      let content = range.cloneContents();\n      result.innerHTML = \"\";\n      result.append(\"cloned: \", content);\n    },\n    insertNode() {\n      let newNode = document.createElement('u');\n      newNode.innerHTML = \"NEW NODE\";\n      range.insertNode(newNode);\n    },\n    surroundContents() {\n      let newNode = document.createElement('u');\n      try {\n        range.surroundContents(newNode);\n      } catch(e) { alert(e) }\n    },\n    resetExample() {\n      p.innerHTML = \\`Example: <i>italic</i> and <b>bold</b>\\`;\n      result.innerHTML = \"\";\n\n      range.setStart(p, 1);\n      range.setEnd(p, 2);\n\n      window.getSelection().removeAllRanges();\n      window.getSelection().addRange(range);\n    }\n  };\n\n  for(let method in methods) {\n    document.write(\\`<div><button onclick=\"methods.\\${method}()\">\\${method}</button></div>\\`);\n  }\n\n  methods.resetExample();\n</script>\n`;\n\nlet result:any;\nconst range = new Range();\n\nconst Selection: React.FC = () => {\n\n    useEffect(() => {\n        setTimeout(()=> {\n            methods.resetExample();\n        },100)\n    });\n\n    const methods = {\n        deleteContents() {\n            range.deleteContents()\n        },\n        extractContents() {\n            let content = range.extractContents();\n            result.innerHTML = \"\";\n            result.append(\"extracted: \", content);\n        },\n        cloneContents() {\n            let content = range.cloneContents();\n            result.innerHTML = \"\";\n            result.append(\"cloned: \", content);\n        },\n        insertNode() {\n            let newNode = document.createElement('u');\n            newNode.innerHTML = \"NEW NODE\";\n            range.insertNode(newNode);\n        },\n        surroundContents() {\n            let newNode = document.createElement('u');\n            try {\n                range.surroundContents(newNode);\n            } catch(e) { alert(e) }\n        },\n        resetExample() {\n            const selection:any = window.getSelection();\n            const p:any = document.querySelector(\"#p2\");\n            result = document.querySelector('#result');\n            p.innerHTML = `Example: <i>italic</i> and <b>bold</b>`;\n            result.innerHTML = \"\";\n            range.setStart(p, 1);\n            range.setEnd(p, 2);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    };\n\n    const onCase1 = ()=> {\n        let range = new Range();\n        const selection:any = document.getSelection();\n        const p1 = document.querySelector(\"#p1\") as HTMLElement;\n        const start:any = document.querySelector(\"#start\") as HTMLElement;\n        const end:any = document.querySelector(\"#end\") as HTMLElement;\n        range.setStart(p1, start.value);\n        range.setEnd(p1, end.value);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    const caseLeft1 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str1\n                }\n            </SyntaxHighlighter>\n        )\n    };\n    const caseLeft2 = () => {\n        return (\n            <SyntaxHighlighter language=\"html\" style={docco}>\n                {\n                    str2\n                }\n            </SyntaxHighlighter>\n        )\n    };\n    const caseRight1 = () => {\n        return (\n            <>\n                <p id=\"p1\">Example: <i>italic</i> and <b>bold</b></p>\n                From <input style={{ marginLeft:'10px' }} className=\"ui-input\" id=\"start\" type=\"number\"/> – To\n                <input style={{ marginLeft:'10px' }} className=\"ui-input\" id=\"end\" type=\"number\"/>\n                <button style={{ marginLeft:'10px' }} onClick={onCase1} className=\"ui-button ui-button-primary\" id=\"button\">点击选择范围</button>\n            </>\n        )\n    };\n\n    const caseRight2 = () => {\n        return (\n            <>\n                <p id=\"p2\">Example: <i>italic</i> and <b>bold</b></p>\n                <div>\n                    result:<span id=\"result\" />\n                </div>\n                <div>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.deleteContents} className=\"ui-button ui-button-primary\" id=\"button\">deleteContents</button>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.extractContents} className=\"ui-button ui-button-primary\" id=\"button\">extractContents</button>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.cloneContents} className=\"ui-button ui-button-primary\" id=\"button\">cloneContents</button>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.insertNode} className=\"ui-button ui-button-primary\" id=\"button\">insertNode</button>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.surroundContents} className=\"ui-button ui-button-primary\" id=\"button\">surroundContents</button>\n                    <button style={{ margin:'10px 10px 0 0' }} onClick={methods.resetExample} className=\"ui-button ui-button-primary\" id=\"button\">reset</button>\n                </div>\n            </>\n        )\n    };\n\n    const render = () => {\n        return (\n            <>\n                <div className=\"comp-code-alpha\" style={{padding: \"1rem\",display:'block'}}>\n                    <Rectangle left={caseLeft1()} right={caseRight1()}/>\n                    <Rectangle left={caseLeft2()} right={caseRight2()}/>\n                </div>\n            </>\n        )\n    };\n\n    return (\n        <Beta title=\"Range 对象示例\" content={render()}/>\n    )\n};\n\nexport default Selection;","import React, {ReactElement} from 'react';\n\ninterface Iprops {\n    title: string;\n    content: ReactElement;\n}\n\nconst Beta: React.FC<Iprops> = props => {\n    const {title, content} = props;\n    return (\n        <div className=\"layout-beta\">\n            <div className=\"layout-hader\">{title}</div>\n            <div className=\"layout-content\">{content}</div>\n        </div>\n    );\n};\n\nexport default Beta;","import React, {ReactElement} from 'react';\n\ninterface Iprops {\n    left: ReactElement,\n    right: ReactElement\n}\n\nconst Rectangle = (props: Iprops) => {\n    const {left,right} = props;\n    return (\n        <div className=\"layout-rectangle\">\n            <div className=\"left\">{left}</div>\n            <div className=\"right\">{right}</div>\n        </div>\n    )\n};\n\nexport default Rectangle;\n"],"sourceRoot":""}